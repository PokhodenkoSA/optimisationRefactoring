// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

//=======================================================================
//function : HashCode
//purpose  : 
//=======================================================================
inline Standard_Integer STEPConstruct_PointHasher::HashCode
  (const gp_Pnt& point, const Standard_Integer Upper)
{
  union 
    {
    double R[3];
    Standard_Integer I[6];
    } U;

  Standard_Real tmp[3];
  point.Coord(tmp[0],tmp[1],tmp[2]);
  U.R[0] = tmp[0].getValue();
  U.R[1] = tmp[1].getValue();
  U.R[2] = tmp[2].getValue();

  return ::HashCode(U.I[0]/23+U.I[1]/19+U.I[2]/17+U.I[3]/13+U.I[4]/11+U.I[5]/7,Upper);
  //  return ::HashCode((U.I[0]>>4)+(U.I[1]>>3)+(U.I[2]>>2)+(U.I[3]>>1)+(U.I[4]>>4)+(U.I[5]>>3),Upper);

}

